"""
neuromodulated_stdp - Synapse type for spike-timing dependent plasticity modulated by a neurotransmitter such as dopamine.
"""
synapse neuromodulated_stdp:

  state:
    w real = 1.
    n real = 0.
    c real = 0.
    pre_tr real = 0.
    post_tr real = 0.
  end

  parameters:
    the_delay ms = 1 ms  @nest::delay   # !!! cannot have a variable called "delay"
    lambda real = .01
    tau_tr_pre ms = 20 ms
    tau_tr_post ms = 20 ms
    tau_c ms = 20 ms
    tau_n ms = 20 ms
    b real = 42.
    alpha real = 1.
    C1 real = 1.
    C2 real = 1.
    Wmax real = 100.
    Wmin real = 0.
    A_plus real = 1.
    A_minus real = 1.
  end

  internals:
    tau_s 1/ms = (tau_c + tau_n) / (tau_c * tau_n)
  end

  input:
    pre_spikes nS <- spike
    post_spikes nS <- spike
    mod_spikes real <- spike
  end

  output: spike

  onReceive(mod_spikes):
    n += 1. / tau_n
  end

  onReceive(post_spikes):
    post_tr += 1.

    # facilitation
    c += A_plus * pre_tr
  end

  onReceive(pre_spikes):
    pre_tr += 1.

    # depression
    c -= A_minus * post_tr

    # deliver spike to postsynaptic partner
    deliver_spike(w, the_delay)
  end

  # update from time t to t + resolution
  update:
    # resolution() returns the timestep to be made (in units of time)
    # the sequence here matters: the update step for w requires the "old" values of c and n
    w -= c * ( n / tau_s * expm1( -tau_s * resolution() ) \
             - b * tau_c * expm1( -resolution() / tau_c ))
    c = c * exp(-resolution() / tau_c)
    n = n * exp(-resolution() / tau_n)
  end

end
